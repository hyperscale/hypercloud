{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "HyperPaaS Server API.",
    "contact": {
      "name": "Axel Etcheverry",
      "email": "axel@etcheverry.biz"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/v1/deploy/{application_id}/hooks/{provider}": {
      "get": {
        "description": "Trigger new deployment for {application_id} from {provider}",
        "tags": [
          "Deploy"
        ],
        "operationId": "postDeployHookHandler",
        "responses": {}
      }
    },
    "/v1/nodes": {
      "get": {
        "description": "Get the nodes list",
        "tags": [
          "Node"
        ],
        "operationId": "getNodesHandler",
        "responses": {
          "200": {
            "$ref": "#/responses/Node"
          }
        }
      }
    },
    "/v1/services": {
      "get": {
        "description": "Get the services list",
        "tags": [
          "Service"
        ],
        "operationId": "getServicesHandler",
        "parameters": [
          {
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string",
            "name": "StackID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Service"
          }
        }
      },
      "post": {
        "description": "Create service",
        "tags": [
          "Service"
        ],
        "operationId": "postServiceHandler",
        "responses": {
          "201": {
            "$ref": "#/responses/Service"
          }
        }
      }
    },
    "/v1/services/{id}": {
      "get": {
        "description": "Get a service by id",
        "tags": [
          "Stack"
        ],
        "operationId": "getServiceHandler",
        "responses": {
          "200": {
            "$ref": "#/responses/Service"
          }
        }
      }
    },
    "/v1/stacks": {
      "get": {
        "description": "Get the stacks list",
        "tags": [
          "Stack"
        ],
        "operationId": "getStacksHandler",
        "responses": {
          "200": {
            "$ref": "#/responses/Stack"
          }
        }
      },
      "post": {
        "description": "Create stack",
        "tags": [
          "Stack"
        ],
        "operationId": "postStacksHandler",
        "responses": {
          "201": {
            "$ref": "#/responses/Stack"
          }
        }
      }
    },
    "/v1/stacks/{id}": {
      "get": {
        "description": "Get a stack by id",
        "tags": [
          "Stack"
        ],
        "operationId": "getStackHandler",
        "responses": {
          "200": {
            "$ref": "#/responses/Stack"
          }
        }
      }
    },
    "/v1/stacks/{id}/services": {
      "post": {
        "description": "Get stack services list",
        "tags": [
          "Stack"
        ],
        "operationId": "getStackServicesHandler",
        "responses": {
          "200": {
            "$ref": "#/responses/Service"
          }
        }
      }
    }
  },
  "definitions": {
    "Service": {
      "type": "object",
      "title": "Service represents a Service.",
      "required": [
        "name"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Hosts"
        },
        "id": {
          "type": "string",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
          "x-go-name": "ID"
        },
        "name": {
          "description": "Service name.",
          "type": "string",
          "minLength": 3,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$",
          "x-go-name": "Name"
        },
        "stack_id": {
          "type": "string",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
          "x-go-name": "StackID"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/hyperscale/hyperpaas/database/entity"
    },
    "Stack": {
      "type": "object",
      "title": "Stack represents a Stack.",
      "required": [
        "name"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "id": {
          "type": "string",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
          "x-go-name": "ID"
        },
        "name": {
          "description": "Stack name.",
          "type": "string",
          "minLength": 3,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$",
          "x-go-name": "Name"
        },
        "services": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Services"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "github.com/hyperscale/hyperpaas/database/entity"
    },
    "StackCompose": {
      "type": "object",
      "title": "StackCompose represents a Stack Compose.",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "id": {
          "type": "string",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
          "x-go-name": "ID"
        },
        "stack_id": {
          "type": "string",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
          "x-go-name": "StackID"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "UpdatedAt"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "github.com/hyperscale/hyperpaas/database/entity"
    }
  },
  "responses": {
    "Service": {
      "schema": {
        "$ref": "#/definitions/Service"
      }
    },
    "Stack": {
      "schema": {
        "$ref": "#/definitions/Stack"
      }
    },
    "StackCompose": {
      "schema": {
        "$ref": "#/definitions/StackCompose"
      }
    }
  }
}